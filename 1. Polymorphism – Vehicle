"""
Create an abstract class called Vehicle that should have abstract methods drive and refuel. 
Create 2 vehicles that inherit the Vehicle class (a Car and a Truck) and simulates driving and 
refueling them. 

Car and Truck both have fuel_quantity, fuel_consumption in liters per km
and can be driven a given distance: drive(distance) and refueled with a given amount of fuel: 
refuel(fuel). It is summer, so both vehicles use air conditioners and their fuel consumption per 
km when driving is increased by 0.9 liters for the car and with 1.6 liters for the truck. 

Also, the 
Truck has a tiny hole in its tank and when itâ€™s refueled it keeps only 95% of the given fuel. The car 
has no problems and adds all the given fuel to its tank. If a vehicle cannot travel the given distance, 
its fuel does not change.
Hint: from abc import ABC, abstractmethod
"""
from abc import ABC, abstractmethod

class Vehicle:
    def __init__(self):
        print("Vehicle")
    def drive(self,distance):
        pass
    def refuel(self,fuel):
        pass
class Car(Vehicle):
    def __init__(self,fuel_quantity,fuel_consumption):
        self.fuel_quantity = fuel_quantity
        self.fuel_consumption = fuel_consumption + 0.9
    def drive(self,distance):
        self.distance = distance
        self.fuel_quantity = self.fuel_quantity - (self.distance * self.fuel_consumption)
    def refuel(self,fuel):
        self.fuel = fuel
        self.fuel_quantity = self.fuel_quantity + self.fuel

class Truck(Vehicle):
    def __init__(self,fuel_quantity,fuel_consumption):
        self.fuel_quantity = fuel_quantity
        self.fuel_consumption = fuel_consumption + 1.6
    def drive(self,distance):
        self.distance = distance
        self.fuel_quantity = self.fuel_quantity - (self.distance * self.fuel_consumption)
    def refuel(self,fuel):
        self.fuel = fuel * 0.95
        self.fuel_quantity = self.fuel_quantity + self.fuel

car = Car(20, 5)
car.drive(3)
print(car.fuel_quantity)
car.refuel(10)
print(car.fuel_quantity)

truck = Truck(100, 15)
truck.drive(5)
print(truck.fuel_quantity)
truck.refuel(50)
print(truck.fuel_quantity)
